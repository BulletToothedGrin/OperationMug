//--------------------------------------------------------------
//-- Name:       William Quayle
//-- Class:      CIS-1400 Summer 2015
//-- Assignment: Homework 9
//-- File:       Homework_09.java
//-- Purpose:    Name Sort and Search
//--------------------------------------------------------------

package assignments;

import global.Cod;

public class Homework_09 
{
	public static void main(String[] args) 
	{
		String[] names = new String [20];//array for name entries
		String temp;//placeholder value
		String search; //value to be searched
		int iteration; //number of lookups needed to find search value
		int searchFirst; //first search array element
		int searchLast; //last search array element
		int searchMid; //mid point of search array
		int searchPos; //Position of search value
		boolean found; //flag to determine if search value is found
		
		//prompt for entries
		System.out.println("Please enter 20 names:");
		
		//loop to enter names into array
		for (int count = 0; count < 20; count ++)
		{
			System.out.print((count + 1) + ":");
			names[count] = Cod.next();
			
		}//name entry loop
		
		
		System.out.println();//intentional blank
			
		//Outer loop to place list at the last element
		for (int lastEntry = names.length - 1; lastEntry >= 0; lastEntry --)
		{
			//Inner loop to check all values in array
			for (int i = 0; i <= lastEntry - 1; i ++)
			{  
				//checks values of array against other values
				if(names[i].compareTo(names[i + 1]) > 0)
				{
					//swaps values of array 
					temp = names[i];
					names[i] = names[i + 1];
					names[i + 1] = temp;
				}//if()
			}//for()
		}//for()
		
		//lists all names in alphabetical order
		System.out.println("The sorted names are:");
		for (int sort = 0; sort < 20; sort ++)
		{
			System.out.println(names[sort]);
		}
		
		System.out.println();//intentional blank space

		//Bubble search loop
		do
		{
			//prompts for search value
			System.out.println("Enter a name to search for <or Enter to exit>:");
			search = Cod.next();
			System.out.println();
			
			//set search variables
			iteration = 1;
			searchFirst= 0;
			searchLast= names.length -1; 
			searchPos = -1;
			found = false; 
			
			//search loop
			while (!found && searchFirst <= searchLast)
			{
				//assigns midpoint
				searchMid = (searchFirst + searchLast) / 2;
				
				//If the value is at midpoint
				if (names[searchMid].equals (search))
				{
					//search value found message
					found = true;
					searchPos = searchMid;
					System.out.println("Name Found: " + search);//name match
					System.out.println("Position: " + searchPos);//name position on list
					System.out.println("Array lookups: " + iteration);//number of iterations
					System.out.println();//intentional blank space
					
				}//if()
				
				//If the value is in the lower half
				else if (names[searchMid].compareTo (search) > 0)
				{
					searchLast = searchMid -1;
					iteration ++;
				}//else
				
				//if the value is in the upper half
				else
				{
					searchFirst = searchMid + 1;
					iteration ++;
				}//else

			}//while()
		
			//No match found conditions
			if (!found && searchFirst >= searchLast)
			{
				//No match found message
				System.out.println("Name not found");
				System.out.println("Array lookups: " + iteration);
				System.out.println();//intentional blank space
			}						
				
		}while (!(search.equals("")));//runs application as long as 'return' is not entered. 

	}//main

}//class()
